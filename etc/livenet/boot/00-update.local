###########################################################
## update local boot partition after system kernel upgrade
###########################################################

# TODO check if system need kernel update

mount -L BOOT /boot
mount --bind / /mnt
DIFF_NUM=`diff -rq /mnt/boot /boot | wc -l`
if [ "$DIFF_NUM" -gt "0" ] ; then

    rsync -a /mnt/boot/ /boot/
    umount /mnt
    update-grub
  
    echo "System last update $(date)" >> /var/lastupdate
else 
    umount -lf /mnt
fi



# ##################################################
# # update local root filesystem from LIVENET_ROOT
# ##################################################
#echo "posso fare qualcosa"?
#do_debug_shell
# # if null root filesystem is '/'
# DEST_ROOT=$1

# if [ -z "${LIVENET_ROOT}" ]; then
#     do_log "No LIVENET_ROOT defined, skip update"
#     sleep 5
#     return 0
# fi

# mkdir -p /${NFSRO} ${DEST_ROOT}/${ALLUPDATES}

# mountpoint -q /${NFSRO}
# if [ $? != 0 ]; then
#     mount_livenet_root /${NFSRO}
#     if [ $? != 0 ]; then
#         do_log "ERROR mounting LIVENET_ROOT, skip update"
#         sleep 5
#         return 1
#     fi
#     UMOUNT_PLEASE=true
# fi

# rsync --quiet --archive /${NFSRO}/${ALLUPDATES}/ ${DEST_ROOT}/${ALLUPDATES}/
# if [ $? != 0 ]; then
#     do_log "ERROR getting update list, skip update"
#     sleep 5
#     return 1
# fi

# CURRENT=
# if [ -e ${DEST_ROOT}/${UPDATE_FLAG} ]; then
#     CURRENT=$( basename $(readlink -f ${DEST_ROOT}/${UPDATE_FLAG} ))
# fi

# # find newest update
# cd ${DEST_ROOT}/${ALLUPDATES}
# UPDATES=
# for update in $( ls 2???????-???? | sort ); do
#     [ -z "${CURRENT}" ] && UPDATES="${UPDATES} $update"
#     [ "${CURRENT}" = "$update" ] && CURRENT=
# done

# # copy updates in cpio mode
# cd /${NFSRO}
# for update in $UPDATES; do
#     do_log "Updating $update, please wait"
#     [ -n "${testmode}" ] && continue

#     # vedere lo script 10-cups.default
#     chattr -i ${DEST_ROOT}/etc/cups/printers.conf.local.*

#     update_script=${DEST_ROOT}/${ALLUPDATES}/${update}.sh
#     [ -e ${update_script} ] && /bin/sh ${update_script} # execute script if found

#     cpio -pud ${DEST_ROOT}/ < ${DEST_ROOT}/${ALLUPDATES}/${update}

#     ln -sf /${ALLUPDATES}/$update ${DEST_ROOT}/${UPDATE_FLAG}

#     [ -e ${DEST_ROOT}/${ALLUPDATES}/${update}.reboot ] && REBOOT_PLEASE=true

#     if [ -n "${LIVENET_DEBUG}" ]; then
#         echo "Debug mode, sleeping 3 sec"
#         sleep 3
#     fi
# done 


# if [ -n "${UMOUNT_PLEASE}" ]; then
#     cd /
#     umount /${NFSRO}
# fi

# if [ -n "${REBOOT_PLEASE}" ]; then
#     do_log "Upgrade need reboot"
#     #reboot non puï¿½ funzionare in questo punto
# fi

