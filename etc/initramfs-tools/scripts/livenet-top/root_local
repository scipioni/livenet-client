#!/bin/sh

PREREQ="dhcp"
DESCRIPTION="Mount local root"

prereqs()
{
       echo "$PREREQ"
}

case $1 in
prereqs)
       prereqs
       exit 0
       ;;
esac
echo $DESCRIPTION
. /conf/livenet.conf
. /scripts/functions
. /scripts/functions-livenet

log_begin_msg "$DESCRIPTION"

if [ -z "${ROOT}" ]; then
    do_log "skip local mount"  
    exit 0
fi

##Before to boot, check for update

#enable module zfs
/sbin/modprobe zfs

#Import pool named rpool without mountpoint
zpool import rpool -N


#Get the name of volume with mountpoint in /
#exmple rpool/ROOT/plutarcolab
ROOT_VOLUME=$(zfs get mountpoint | awk  '$3=="/" {print $1}')

#Get the name of default image 
#example plutarcolab
IMAGE_NAME=$(echo $ROOT_VOLUME | cut -d '/' -f 3)

#Get latest snapshot on this volume
#example rpool/ROOT/plutarco@1530956369
LAST_SNAP=$(zfs list -t snapshot -o name -s creation -r ${ROOT_VOLUME} | tail -1)

#Get only the name of snaspshot
#example 1530956369
LAST_SNAP_TS=$(echo $LAST_SNAP | cut -d '@' -f 2)

## Mount remote increments directory

# Get remote server
for x in /run/net-"${DEVICE}".conf /run/net-*.conf /tmp/net-*conf; do
    if [ -e $x ]; then
        . ${x}
        #export $ROOTSERVER ||
    fi
done 

#make mount point in to initramfs 
mkdir -p /mnt

#mount updates
do_log " mount remote path for update"  
mount.nfs -o timeo=5 ${LIVENET_ROOT_UPGRADES_PATH} /mnt
if [ $? = 0 ]; then
	#Install all updates
	N_UPDATES=0
	N_UPDATES_DONE=0
	ZERO=0
	NEED_ROLLBACK=1
	start_time_all=$(date +%s)

	for UPDATE_FILE in `ls /mnt/$IMAGE_NAME/*.gz | sort`
	do
		##old  NUMBERVALUE=$(echo ${UPDATE_FILE} | cut -d '.' -f 1 | rev | cut -d '/' -f 1 | rev)
		NUMBERVALUE=$(echo ${UPDATE_FILE} | cut -d '.' -f 1 )
		NUMBERVALUE=${NUMBERVALUE##*/}
		N_UPDATES=$((N_UPDATES+1))

		if test "${NUMBERVALUE}" ">" "${LAST_SNAP_TS}"; then
		   # ROLLBACK to latest snapshot only first time
			start_time=$(date +%s)
			echo "INSTALLING $(basename ${UPDATE_FILE}) on $LAST_SNAP) ..."
			zcat "${UPDATE_FILE}" | zfs receive -F ${ROOT_VOLUME}
		   
			#presuppongo che se zfs receive fallisce vale l'ultimo
			end_time=$(date +%s)
			#sleep 1
			LAST_SNAP=$(zfs list -t snapshot -o name -s creation -r ${ROOT_VOLUME} | tail -1)
			LAST_SNAP_TS=$(echo $LAST_SNAP | cut -d '@' -f 2)
			#echo "The system have install ${UPDATE_FILE} on the volume ${ROOT_VOLUME}, the most recent snapshot of the volume is ${LAST_SNAP}"
			echo "  elapsed time: $(( $((end_time - start_time)) )) sec."
         		N_UPDATES=$((N_UPDATES+1))
			echo "Install next update"
			#sleep 1
		fi
	done
	end_time_all=$(date +%s)
	echo "Your system installed ${N_UPDATES} in $((end_time_all - start_time_all)) seconds"
	umount /mnt
	if [[ $(mount | grep /mnt/ | wc -l) -gt 0 ]]; then
		#if there are some promblems with umount, bye bye
    		umount -lf /mnt/
	fi

else
    do_log " cannot mount remote nfs ${LIVENET_ROOT_IP} "
    sleep 10
fi

#return to root
cd /


zfs set mountpoint=/ ${ROOT_VOLUME}
zpool export rpool


for x in /run/net-"${DEVICE}".conf /run/net-*.conf /tmp/net-*.conf; do
    ROOTMOUNTED=local

   [ -e "${x}" ] && echo "ROOTMOUNTED=${ROOTMOUNTED}" >> ${x}
done

. /scripts/zfs

mountroot

# TODO, controllare che mountroot precedente abbia fatto il suo lavoro
#seconds=10 # wait 10 seconds to have disk module (important for scsi driver)
#while [ 1 ]; do
#    if [ -e "${ROOT}" ]; then
#        break
#    fi
#    seconds=$((seconds-1))
#    if [ ${seconds} -lt 1 ]; then
#        do_log "ERROR: No disk module or no root on disk... install cache or add disk module to initramfs.conf#auto_add_module"
#        sleep 30 # wait to permit to read message
#        exit 1
#    fi
#    sleep 1
#done

#mount -o rw -t ${FSTYPE} ${ROOT} ${rootmnt} # rw for update_root, after root partition is remounted ro in livenet-bottom scripts
#if [ ! $? == 0 ]; then # root mounted, try to update now
#    do_log "ERROR: no local boot"
#    sleep 10
#    exit 1
#fi




log_end_msg

